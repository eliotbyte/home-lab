networks:
  traefik-network:
    external: true
  planka-net:
    driver: bridge

volumes:
  favicons:
  user-avatars:
  background-images:
  attachments:
  postgres-data:

services:
  db:
    image: postgres:${PG_IMAGE_TAG}
    restart: always
    environment:
      - POSTGRES_DB=${PG_DB_NAME}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d planka"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - planka-net

  planka:
    image: ghcr.io/plankanban/planka:${PLANKA_IMAGE_TAG}
    container_name: planka
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - BASE_URL=https://${HOST_NAME}
      - DATABASE_URL=postgresql://postgres@db/${PG_DB_NAME}
      - SECRET_KEY=${PLANKA_SECRET_KEY}
      - DEFAULT_ADMIN_EMAIL=${PLANKA_ADMIN_EMAIL}
      - DEFAULT_ADMIN_PASSWORD=${PLANKA_ADMIN_PASSWORD}
      - DEFAULT_ADMIN_NAME=${PLANKA_ADMIN_NAME}
      - DEFAULT_ADMIN_USERNAME=${PLANKA_ADMIN_USERNAME}
      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-en-US}
    volumes:
      - favicons:/app/public/favicons
      - user-avatars:/app/public/user-avatars
      - background-images:/app/public/background-images
      - attachments:/app/private/attachments
    networks:
      - planka-net
      - traefik-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.planka.rule=Host(`${HOST_NAME}`)
      - traefik.http.routers.planka.entrypoints=websecure
      - traefik.http.routers.planka.tls.certresolver=cloudflare
      - traefik.http.routers.planka.service=planka
      - traefik.http.services.planka.loadbalancer.server.port=${PLANKA_PORT:-1337}
      - traefik.docker.network=traefik-network 